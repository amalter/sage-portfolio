/** Import Bootstrap functions */
@import "~bootstrap/scss/functions";

$aa-white : #fff;
$aa-black : #262422;
$aa-light-gray : #9e9898;
$aa-dark-purple : #331e59;
$aa-purple: #58349b;

$theme-colors: (
  white: $aa-white,
  black: $aa-black,
  light-gray: $aa-light-gray
);

/** Bootstrap navbar fix (https://git.io/fADqW) */
$navbar-dark-toggler-icon-bg: none;
$navbar-light-toggler-icon-bg: none;

/** Accessibility Styles **/
@mixin focus-style {
  &:focus {
    text-decoration: none;
    border: dashed $aa-white 2px;
  }
}

@mixin hover-link {
  &:hover {
    text-decoration: underline !important;
    text-decoration-style: dashed !important;
  }
}

@mixin pie-bg {
  background-color: $aa-white;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23edebf2' fill-opacity='0.4' fill-rule='nonzero'%3E%3Cpath d='M29 58.58l7.38-7.39A30.95 30.95 0 0 1 29 37.84a30.95 30.95 0 0 1-7.38 13.36l7.37 7.38zm1.4 1.41l.01.01h-2.84l-7.37-7.38A30.95 30.95 0 0 1 6.84 60H0v-1.02a28.9 28.9 0 0 0 18.79-7.78L0 32.41v-4.84L18.78 8.79A28.9 28.9 0 0 0 0 1.02V0h6.84a30.95 30.95 0 0 1 13.35 7.38L27.57 0h2.84l7.39 7.38A30.95 30.95 0 0 1 51.16 0H60v27.58-.01V60h-8.84a30.95 30.95 0 0 1-13.37-7.4L30.4 60zM29 1.41l-7.4 7.38A30.95 30.95 0 0 1 29 22.16 30.95 30.95 0 0 1 36.38 8.8L29 1.4zM58 1A28.9 28.9 0 0 0 39.2 8.8L58 27.58V1.02zm-20.2 9.2A28.9 28.9 0 0 0 30.02 29h26.56L37.8 10.21zM30.02 31a28.9 28.9 0 0 0 7.77 18.79l18.79-18.79H30.02zm9.18 20.2A28.9 28.9 0 0 0 58 59V32.4L39.2 51.19zm-19-1.4a28.9 28.9 0 0 0 7.78-18.8H1.41l18.8 18.8zm7.78-20.8A28.9 28.9 0 0 0 20.2 10.2L1.41 29h26.57z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

/** Media Queries **/
//Breakpoints
$breakpoints: (
  "minimum":      0,
  "phone-sm":     320px,
  "phone":        375px,
  "phone-wide":   480px,
  "phablet":      560px,
  "tablet-small": 640px,
  "tablet":       768px,
  "tablet-large": 781px,
  "tablet-wide":  991px,
  "uwkc-max":     1200px,
  "desktop":      1200px,
  "desktop-wide": 1440px
);

// breakpoint media query mixin

@mixin mq($width, $type: "max") {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
  }

  @if $type == "min" {
    $width: $width + 1px;
  }

  @media only screen and (#{$type}-width: $width) {
    @content;
  }
}
